on:
  push:
    branches:
      - main

jobs:
  release:
    name: Build, Version, Tag and Publish
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
          registry-url: https://registry.npmjs.org/

      - name: Setup PNPM
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Install dependencies
        run: pnpm install

      - name: Build library
        run: pnpm build

      - name: Bump version (patch)
        run: |
          npm version patch --no-git-tag-version

      - name: Commit and push version bump
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add -A
          git diff --cached --quiet || git commit -m "chore(release): bump version"
          git push origin main

      - name: Get current version
        id: get_version
        run: echo "version=$(node -p "require('./package.json').version")" >> "$GITHUB_OUTPUT"

      - name: Get previous tag
        id: get_previous_tag
        run: echo "tag=$(git describe --tags --abbrev=0 || echo '')" >> "$GITHUB_OUTPUT"

      - name: Create Git Tag
        run: |
          git tag "${{ steps.get_version.outputs.version }}"
          git push origin "${{ steps.get_version.outputs.version }}"

      - name: Publish to NPM (public package)
        run: pnpm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.ORIGINAL_NPM_TOKEN }}

      - name: Generate Changelog
        id: changelog
        run: |
          PREV_TAG=${{ steps.get_previous_tag.outputs.tag }}
          CURR_TAG=${{ steps.get_version.outputs.version }}

          if [ -z "$PREV_TAG" ]; then
            LOG=$(git log --pretty=format:"- %s")
          else
            LOG=$(git log "$PREV_TAG"..HEAD --pretty=format:"- %s")
          fi

          echo "log<<EOF" >> $GITHUB_OUTPUT
          echo "$LOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.get_version.outputs.version }}
          name: v${{ steps.get_version.outputs.version }}
          body: ${{ steps.changelog.outputs.log }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
